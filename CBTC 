<meta name='viewport' content='width=device-width, initial-scale=1'/>
<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Mercado •BTC• - ColoredBitcoin</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    :root {
      --bitcoin-orange: #f7931a;
      --bitcoin-gold: #ffd700;
      --satoshi-blue: #1a73e8;
      --dark-bg: #121212;
      --twitter-blue: #1DA1F2;
    }
    
    body {
      font-family: 'Segoe UI', 'Arial', sans-serif;
      background: var(--dark-bg);
      color: white;
      margin: 0;
      padding: 0;
      background-image: 
        radial-gradient(circle at 10% 20%, rgba(247, 147, 26, 0.1) 0%, transparent 20%),
        radial-gradient(circle at 90% 80%, rgba(26, 115, 232, 0.1) 0%, transparent 20%);
    }
    
    .bot-container {
      max-width: 800px;
      margin: 20px auto;
      padding: 20px;
      background: rgba(18, 18, 18, 0.8);
      border-radius: 16px;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
      border: 1px solid rgba(247, 147, 26, 0.2);
      backdrop-filter: blur(10px);
    }
    
    .bot-header {
      background: linear-gradient(135deg, var(--bitcoin-orange), var(--bitcoin-gold));
      color: white;
      padding: 25px;
      border-radius: 12px;
      text-align: center;
      margin-bottom: 30px;
      position: relative;
      overflow: hidden;
    }
    
    .bot-header::after {
      content: "₿";
      position: absolute;
      font-size: 120px;
      opacity: 0.1;
      right: 20px;
      top: 50%;
      transform: translateY(-50%);
    }
    
    .bot-header h1 {
      margin: 0;
      font-size: 2.2em;
      text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);
    }
    
    .bot-header p {
      margin: 10px 0 0;
      font-size: 1.1em;
      opacity: 0.9;
    }
    
    .info-card {
      background: rgba(30, 30, 30, 0.7);
      border-radius: 12px;
      padding: 20px;
      margin: 20px 0;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      border-left: 4px solid var(--bitcoin-orange);
      transition: transform 0.3s;
    }
    
    .info-card:hover {
      transform: translateY(-5px);
    }
    
    .info-card h3 {
      color: var(--bitcoin-gold);
      margin-top: 0;
      font-size: 1.4em;
      display: flex;
      align-items: center;
    }
    
    .info-card h3 i {
      margin-right: 10px;
    }
    
    .price-highlight {
      color: var(--bitcoin-gold);
      font-weight: bold;
      font-size: 1.4em;
      background: rgba(247, 147, 26, 0.1);
      padding: 5px 10px;
      border-radius: 6px;
      display: inline-block;
    }
    
    .btn {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      background: var(--bitcoin-orange);
      color: white;
      padding: 12px 25px;
      border-radius: 8px;
      text-decoration: none;
      font-weight: bold;
      margin: 8px;
      transition: all 0.3s;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .btn:hover {
      background: #e07e0e;
      transform: translateY(-2px);
      box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
    }
    
    .btn i {
      margin-right: 8px;
    }
    
    .btn-swap {
      background: var(--satoshi-blue);
    }
    
    .btn-swap:hover {
      background: #0d5bba;
    }
    
    .btn-market {
      background: linear-gradient(135deg, #6e2bff, #a777e3);
    }
    
    .btn-market:hover {
      background: linear-gradient(135deg, #5d1ae8, #8e5fd3);
    }
    
    .btn-telegram {
      background: #0088cc;
    }
    
    .btn-telegram:hover {
      background: #0077b5;
    }
    
    .btn-twitter {
      background: var(--twitter-blue);
    }
    
    .btn-twitter:hover {
      background: #1a8cd8;
    }
    
    .tutorial-step {
      margin-bottom: 15px;
      padding-left: 20px;
      border-left: 3px solid var(--bitcoin-orange);
      position: relative;
    }
    
    .tutorial-step::before {
      content: "•";
      position: absolute;
      left: 5px;
      color: var(--bitcoin-orange);
      font-weight: bold;
    }
    
    .satoshi-reference {
      font-size: 0.8em;
      color: #888;
      margin-top: 5px;
    }
    
    .satoshi-reference span {
      color: var(--satoshi-blue);
    }
    
    .social-links {
      display: flex;
      justify-content: center;
      flex-wrap: wrap;
      margin-top: 30px;
      padding-top: 20px;
      border-top: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    @media (max-width: 600px) {
      .bot-container {
        padding: 15px;
        margin: 10px;
      }
      
      .bot-header {
        padding: 15px;
      }
      
      .btn {
        padding: 10px 15px;
        font-size: 0.9em;
      }
      
      .social-links {
        flex-direction: column;
        align-items: center;
      }
    }
  </style>
</head>
<body>
  <div class="bot-container">
    <div class="bot-header">
      <h1><i class="fab fa-bitcoin"></i> ColoredBitcoin (•BTC•)</h1>
      <p>El futuro de los activos digitales en Bitcoin</p>
    </div>
    
    <div class="price-card">
      <h3><i class="fab fa-bitcoin"></i> Precios en Tiempo Real</h3>
      
      <div class="">
        <span>Precio BTC:</span>
        <span id="Bitcoin-ARC20"span>
      </div>{
      
      <div class="app.get('/api/coincap/bitcoin-price', async (req, res) => {
        try {
            const response = await axios.get("https://api.coincap.io/v2/assets/bitcoin );
            const price = parseFloat(response.data.data.priceUsd);
            
            res.json({
                success: true,
                currency: 'USD',
                price: price,
                timestamp: new Date().toISOString(),
                source: 'CoinCap'
            });
        } catch (error) {
            console.error('Error fetching Bitcoin price from CoinCap:', error);
            res.status(500).json({
                success: false,
                message: 'Error al obtener el precio de Bitcoin desde CoinCap'
            });
        }
      });
      <div class="price-row highlight">
        <span>Valor •BTC•:</span>
        <span id="colored-price">-</span>
      </div>
      
      <div class="last-updated">
        Actualizado: <span id="last-updated">--:--:--</span>
      </div>
    </div>
    
    <div class="info-card">
      <h3><i class="fas fa-bolt"></i> Acciones rápidas</h3>
      <a href="https://www.dotswap.app/swap#A_%E2%80%A2BTC_%E2%80%A2coloredbitcoin" class="btn btn-swap">
        <i class="fas fa-exchange-alt"></i> Ir a DotSwap
      </a>
      <a href="https://atomicalmarket.com/market/token/coloredbitcoin" class="btn btn-market">
        <i class="fas fa-store"></i> Atomicals Market
      </a>
    </div>
    
    <div class="info-card">
      <h3><i class="fas fa-graduation-cap"></i> How to buy •CBTC•</h3>
      <div class="tutorial-step">
        <p>Conecta tu wallet compatible para activos ARC-20(wizz wallet, universe wallet, etc.)</p>
      </div>
      <div class="tutorial-step">
       <p>Enviar BTC a tu wizz wallet.
        <p>Selecciona •Coloredbitcoin• como token a comprar </p>
      </div>
      <div class="tutorial-step">
       <p> En mercado atomicals market seleccionas el paquete y pagas el fee
        <
        <p>En Dotswap pones la cantidad a comprar de coloredbitcoin y confirmas el swap 
        <p>Confirmada la transacción en el bloque.</p>
      </div>
      <div class="tutorial-step">
        <p>Recibirás tus •Coloredbitcoin• en tu dirección de Bitcoin(ARC20)</p>
      </div>
    </div>
    
    <div class="info-card">
      <h3><i class="fas fa-info-circle"></i> About •CBTC•</h3>
      <p>Coloredbitcoin is a Digital token built on top of Bitcoin using Atomicals technology..</p>
      <p>Each CBTC is Backed by real Satoshis on the Bitcoin blockchain..</p>
    </div>
    
    <!-- Sección de redes sociales añadida aquí -->
    <div class="social-links">
      <a href="https://t.me/coloredbitcoin21" class="btn btn-telegram">
        <i class="fab fa-telegram"></i> Telegram
      </a>
      <a href="https://x.com/coloredbitcoin?t=-dfzU5X8EySB-dLONPH3Lg&s=09" class="btn btn-twitter">
        <i class="fab fa-twitter"></i> Twitter
      </a>
    </div>
  </div>
</body>
</html>
<script>
// Versión extendida con más características
class ColoredBitcoinApp {
  constructor() {
    this.btcPrice = 0;
    this.lastUpdated = null;
    this.elements = {
      price: document.querySelector('.price-highlight'),
      satoshi: document.querySelector('.satoshi-reference span'),
      lastUpdated: document.createElement('div')
    };
    
    this.init();
  }
  
  init() {
    this.setupUI();
    this.fetchPriceData();
    this.setupEventListeners();
    this.checkTelegramIntegration();
  }
  
  setupUI() {
    // Añadir elemento de última actualización
    this.elements.lastUpdated.className = 'last-updated';
    document.querySelector('.info-card').appendChild(this.elements.lastUpdated);
    
    // Crear botón de refresh
    this.refreshBtn = document.createElement('button');
    this.refreshBtn.innerHTML = '<i class="fas fa-sync-alt"></i> Actualizar';
    this.refreshBtn.className = 'btn refresh-btn';
    document.querySelector('.info-card h3').appendChild(this.refreshBtn);
  }
  
  async fetchPriceData() {
    try {
      this.setLoadingState(true);
      
      //document.addEventListener('DOMContentLoaded', async function() {
      // Elementos del DOM
      const btcPriceElement = document.getElementById('btc-price');
      const coloredRatioElement = document.getElementById('colored-ratio');
      const coloredPriceElement = document.getElementById('colored-price');
      const lastUpdatedElement = document.getElementById('last-updated');

      // Actualizar precios
      async function updatePrices() {
        try {
          // 1. Obtener precio de Bitcoin
          const btcPrice = await getBinancePrice();
          
          // 2. Obtener ratio •BTC•/BTC
          const coloredData = await getColoredBitcoinRatio();
          
          // 3. Calcular precios
          const coloredBtcPrice = coloredData.ratio;
          const coloredUsdPrice = btcPrice * coloredData.ratio;
          
          // 4. Actualizar UI
          btcPriceElement.textContent = btcPrice.toLocaleString('en-US', {
            style: 'currency',
            currency: 'USD'
          });
          
          coloredRatioElement.textContent = coloredBtcPrice.toFixed(6);
          
          coloredPriceElement.textContent = coloredUsdPrice.toLocaleString('en-US', {
            style: 'currency', 
            currency: 'USD'
          });
          
          lastUpdatedElement.textContent = new Date().toLocaleTimeString();
          
          // 5. Actualizar cada 30 segundos
          setTimeout(updatePrices, 30000);
          
        } catch (error) {
          console.error("Error updating prices:", error);
          // Reintentar después de 10 segundos si hay error
          setTimeout(updatePrices, 10000);
        }
      }

      // Iniciar
      updatePrices();
    });
      
      this.updatePriceData(mockData);
      
    } catch (error) {
      console.error('Error:', error);
      this.showErrorState();
    } finally {
      this.setLoadingState(false);
    }
  }
  
  updatePriceData(data) {
    this.btcPrice = data.btcPrice;
    this.lastUpdated = data.lastUpdated;
    
    this.updatePriceDisplay();
    this.saveToLocalStorage();
  }
  
  updatePriceDisplay() {
    const sat