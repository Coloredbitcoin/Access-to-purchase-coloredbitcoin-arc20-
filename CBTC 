<meta name='viewport' content='width=device-width, initial-scale=1'/><!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Mercado •BTC• - ColoredBitcoin</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    :root {
      --bitcoin-orange: #f7931a;
      --bitcoin-gold: #ffd700;
      --satoshi-blue: #1a73e8;
      --dark-bg: #121212;
      --twitter-blue: #1DA1F2;
      --fast-fee: #ff4444;  /* Red for fastest */
      --medium-fee: #ffbb33; /* Orange for medium */
      --eco-fee: #00cc00;   /* Green for economy */
    }
    
    body {
      font-family: 'Segoe UI', 'Arial', sans-serif;
      background: var(--dark-bg);
      color: white;
      margin: 0;
      padding: 0;
      background-image: 
        radial-gradient(circle at 10% 20%, rgba(247, 147, 26, 0.1) 0%, transparent 20%),
        radial-gradient(circle at 90% 80%, rgba(26, 115, 232, 0.1) 0%, transparent 20%);
    }
    
    .bot-container {
      max-width: 800px;
      margin: 20px auto;
      padding: 20px;
      background: rgba(18, 18, 18, 0.8);
      border-radius: 16px;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
      border: 1px solid rgba(247, 147, 26, 0.2);
      backdrop-filter: blur(10px);
    }
    
    .bot-header {
      background: linear-gradient(135deg, var(--bitcoin-orange), var(--bitcoin-gold));
      color: white;
      padding: 25px;
      border-radius: 12px;
      text-align: center;
      margin-bottom: 30px;
      position: relative;
      overflow: hidden;
    }
    
    .bot-header::after {
      content: "₿";
      position: absolute;
      font-size: 120px;
      opacity: 0.1;
      right: 20px;
      top: 50%;
      transform: translateY(-50%);
    }
    
    .bot-header h1 {
      margin: 0;
      font-size: 2.2em;
      text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);
    }
    
    .bot-header p {
      margin: 10px 0 0;
      font-size: 1.1em;
      opacity: 0.9;
    }
    
    .info-card {
      background: rgba(30, 30, 30, 0.7);
      border-radius: 12px;
      padding: 20px;
      margin: 20px 0;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      border-left: 4px solid var(--bitcoin-orange);
      transition: transform 0.3s;
    }
    
    .info-card:hover {
      transform: translateY(-5px);
    }
    
    .info-card h3 {
      color: var(--bitcoin-gold);
      margin-top: 0;
      font-size: 1.4em;
      display: flex;
      align-items: center;
    }
    
    .info-card h3 i {
      margin-right: 10px;
    }
    
    .price-card {
      position: relative;
      overflow: hidden;
    }
    
    .price-card::before {
      content: "₿";
      position: absolute;
      font-size: 150px;
      color: var(--bitcoin-orange);
      opacity: 0.1;
      animation: moveBitcoin 20s linear infinite;
      z-index: 0;
    }
    
    @keyframes moveBitcoin {
      0% { transform: translate(-50%, -50%) rotate(0deg); top: 0%; left: 0%; }
      25% { transform: translate(50%, 50%) rotate(90deg); top: 100%; left: 100%; }
      50% { transform: translate(-50%, 50%) rotate(180deg); top: 100%; left: 0%; }
      75% { transform: translate(50%, -50%) rotate(270deg); top: 0%; left: 100%; }
      100% { transform: translate(-50%, -50%) rotate(360deg); top: 0%; left: 0%; }
    }
    
    .price-card > * {
      position: relative;
      z-index: 1;
    }
    
    .price-highlight {
      color: var(--bitcoin-gold);
      font-weight: bold;
      font-size: 1.4em;
      background: rgba(247, 147, 26, 0.1);
      padding: 5px 10px;
      border-radius: 6px;
      display: inline-block;
    }
    
    .btn {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      background: var(--bitcoin-orange);
      color: white;
      padding: 12px 25px;
      border-radius: 8px;
      text-decoration: none;
      font-weight: bold;
      margin: 8px;
      transition: all 0.3s;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .btn:hover {
      background: #e07e0e;
      transform: translateY(-2px);
      box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
    }
    
    .btn i {
      margin-right: 8px;
    }
    
    .btn-swap {
      background: var(--satoshi-blue);
    }
    
    .btn-swap:hover {
      background: #0d5bba;
    }
    
    .btn-market {
      background: linear-gradient(135deg, #6e2bff, #a777e3);
    }
    
    .btn-market:hover {
      background: linear-gradient(135deg, #5d1ae8, #8e5fd3);
    }
    
    .btn-telegram {
      background: #0088cc;
    }
    
    .btn-telegram:hover {
      background: #0077b5;
    }
    
    .btn-twitter {
      background: var(--twitter-blue);
    }
    
    .btn-twitter:hover {
      background: #1a8cd8;
    }
    
    .tutorial-step {
      margin-bottom: 15px;
      padding-left: 20px;
      border-left: 3px solid var(--bitcoin-orange);
      position: relative;
    }
    
    .tutorial-step::before {
      content: "•";
      position: absolute;
      left: 5px;
      color: var(--bitcoin-orange);
      font-weight: bold;
    }
    
    .satoshi-reference {
      font-size: 0.8em;
      color: #888;
      margin-top: 5px;
    }
    
    .satoshi-reference span {
      color: var(--satoshi-blue);
    }
    
    .social-links {
      display: flex;
      justify-content: center;
      flex-wrap: wrap;
      margin-top: 30px;
      padding-top: 20px;
      border-top: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .fee-buttons {
      display: inline-flex;
      align-items: center;
      margin-top: 10px;
      gap: 8px;
    }
    
    .fee-btn {
      padding: 3px 8px;
      font-size: 0.85em;
      border-radius: 12px;
      color: white;
      font-weight: 500;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
    }
    
    .fee-btn::after {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 0;
      height: 0;
      background: rgba(255, 255, 255, 0.2);
      border-radius: 50%;
      transform: translate(-50%, -50%);
      transition: width 0.4s ease, height 0.4s ease;
    }
    
    .fee-btn:hover::after {
      width: 200%;
      height: 200%;
    }
    
    .fee-btn:hover {
      transform: translateY(-1px);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }
    
    .fee-btn.fast {
      background: linear-gradient(45deg, var(--fast-fee), #ff6666);
      border: 1px solid rgba(255, 68, 68, 0.5);
    }
    
    .fee-btn.medium {
      background: linear-gradient(45deg, var(--medium-fee), #ffcc66);
      border: 1px solid rgba(255, 187, 51, 0.5);
    }
    
    .fee-btn.economy {
      background: linear-gradient(45deg, var(--eco-fee), #33ff33);
      border: 1px solid rgba(0, 204, 0, 0.5);
    }
    
    @media (max-width: 600px) {
      .bot-container {
        padding: 15px;
        margin: 10px;
      }
      
      .bot-header {
        padding: 15px;
      }
      
      .btn {
        padding: 10px 15px;
        font-size: 0.9em;
      }
      
      .social-links {
        flex-direction: column;
        align-items: center;
      }
      
      .fee-buttons {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 5px;
      }
      
      .fee-btn {
        margin: 2px 0;
      }
    }
  </style>
</head>
<body>
  <div class="bot-container">
    <div class="bot-header">
      <h1><i class="fab fa-bitcoin"></i> ColoredBitcoin (•BTC•)</h1>
      <p>El futuro de los activos digitales en Bitcoin</p>
    </div>
    
    <div class="info-card price-card">
      <h3><i class="fab fa-bitcoin"></i> Precio en Tiempo Real</h3>
      <div class="">
        <span>Precio BTC:</span>
        <span id="btc-price" class="price-highlight">-</span>
      </div>
      <div class="fee-buttons">
        <span class="fee-btn fast">Rápida: <span id="fastest-fee">-</span> sat/vB</span>
        <span class="fee-btn medium">Media: <span id="half-hour-fee">-</span> sat/vB</span>
        <span class="fee-btn economy">Económica: <span id="economy-fee">-</span> sat/vB</span>
      </div>
    </div>
    
    <div class="info-card">
      <h3><i class="fas fa-bolt"></i> Acciones rápidas</h3>
      <a href="https://www.dotswap.app/swap#A_%E2%80%A2BTC_%E2%80%A2coloredbitcoin" class="btn btn-swap">
        <i class="fas fa-exchange-alt"></i> Ir a DotSwap
      </a>
      <a href="https://atomicalmarket.com/market/token/coloredbitcoin" class="btn btn-market">
        <i class="fas fa-store"></i> Atomicals Market
      </a>
    </div>
    
    <div class="info-card">
      <h3><i class="fas fa-graduation-cap"></i> How to buy •CBTC•</h3>
      <div class="tutorial-step">
        <p>Conecta tu wallet compatible para activos ARC-20(wizz wallet, universe wallet, etc.)</p>
      </div>
      <div class="tutorial-step">
       <p>Enviar BTC a tu wizz wallet.
        <p>Selecciona •Coloredbitcoin• como token a comprar </p>
      </div>
      <div class="tutorial-step">
       <p> En mercado atomicals market seleccionas el paquete y pagas el fee
        <
        <p>En Dotswap pones la cantidad a comprar de coloredbitcoin y confirmas el swap 
        <p>Confirmada la transacción en el bloque.</p>
      </div>
      <div class="tutorial-step">
        <p>Recibirás tus •Coloredbitcoin• en tu dirección de Bitcoin(ARC20)</p>
      </div>
    </div>
    
    <div class="info-card">
      <h3><i class="fas fa-info-circle"></i> About •CBTC•</h3>
      <p>Coloredbitcoin es un token digital construido sobre Bitcoin utilizando tecnología Atomicals..</p>
      <p>Cada Coloredbitcoin está respaldado por Satoshis reales en la cadena de bloques de Bitcoin..</p>
      <p>Respaldo por satoshis: Valor mínimo garantizado.  
      <p>Divisibilidad y transferibilidad: Flexibles como Bitcoin.  
      <p>Acuñación descentralizada: Comunidad impulsa su creación.  
      <p>Usos variados: Arte, DeFi, coleccionables.
    </div>
    
    <!-- Sección de redes sociales añadida aquí -->
    <div class="social-links">
      <a href="https://t.me/coloredbitcoin21" class="btn btn-telegram">
        <i class="fab fa-telegram"></i> Telegram
      </a>
      <a href="https://x.com/coloredbitcoin?t=-dfzU5X8EySB-dLONPH3Lg&s=09" class="btn btn-twitter">
        <i class="fab fa-twitter"></i> Twitter
      </a>
      <a href="ATOMICALS PROTOCOL">
        <i class="fab fa-ATOMICALS PROTOCOL"></i> ATOMICALS PROTOCOL
      </a>
    </div>
  </div>

  <script>
    // Function to update Bitcoin price (CoinGecko API)
    async function updateBitcoinPrice() {
      try {
        const response = await fetch('https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd');
        const data = await response.json();
        const priceElement = document.getElementById('btc-price');
        
        const price = data.bitcoin.usd;
        priceElement.textContent = price.toLocaleString('en-US', {
          style: 'currency',
          currency: 'USD'
        });
      } catch (error) {
        console.error('Error fetching Bitcoin price:', error);
        document.getElementById('btc-price').textContent = 'Error';
      }
    }

    // Function to update mempool fees (Mempool.space API)
    async function updateMempoolFees() {
      try {
        const response = await fetch('https://mempool.space/api/v1/fees/recommended');
        const data = await response.json();
        
        document.getElementById('fastest-fee').textContent = data.fastestFee;
        document.getElementById('half-hour-fee').textContent = data.halfHourFee;
        document.getElementById('economy-fee').textContent = data.economyFee;
      } catch (error) {
        console.error('Error fetching mempool fees:', error);
        document.getElementById('fastest-fee').textContent = 'Error';
        document.getElementById('half-hour-fee').textContent = 'Error';
        document.getElementById('economy-fee').textContent = 'Error';
      }
      
      // Update every 30 seconds
      setTimeout(updateMempoolFees, 30000);
    }

    // Start updates when page loads
    document.addEventListener('DOMContentLoaded', () => {
      updateBitcoinPrice();
      updateMempoolFees();
      // Keep the price updating every 30 seconds as well
      setInterval(updateBitcoinPrice, 30000);
    });
  </script>
</body>
</html><script>// Versión extendida con más características
class ColoredBitcoinApp {
  constructor() {
    this.btcPrice = 0;
    this.lastUpdated = null;
    this.elements = {
      price: document.querySelector('.price-highlight'),
      satoshi: document.querySelector('.satoshi-reference span'),
      lastUpdated: document.createElement('div')
    };
    
    this.init();
  }
  
  init() {
    this.setupUI();
    this.fetchPriceData();
    this.setupEventListeners();
    this.checkTelegramIntegration();
  }
  
  setupUI() {
    // Añadir elemento de última actualización
    this.elements.lastUpdated.className = 'last-updated';
    document.querySelector('.info-card').appendChild(this.elements.lastUpdated);
    
    // Crear botón de refresh
    this.refreshBtn = document.createElement('button');
    this.refreshBtn.innerHTML = '<i class="fas fa-sync-alt"></i> Actualizar';
    this.refreshBtn.className = 'btn refresh-btn';
    document.querySelector('.info-card h3').appendChild(this.refreshBtn);
  }
  
  async fetchPriceData() {
    try {
      this.setLoadingState(true);
      
  //document.addEventListener('DOMContentLoaded', async function() {
  // Elementos del DOM
  const btcPriceElement = document.getElementById('btc-price');
  const coloredRatioElement = document.getElementById('colored-ratio');
  const coloredPriceElement = document.getElementById('colored-price');
  const lastUpdatedElement = document.getElementById('last-updated');

  // Actualizar precios
  async function updatePrices() {
    try {
      // 1. Obtener precio de Bitcoin
      const btcPrice = await getBinancePrice();
      
      // 2. Obtener ratio •BTC•/BTC
      const coloredData = await getColoredBitcoinRatio();
      
      // 3. Calcular precios
      const coloredBtcPrice = coloredData.ratio;
      const coloredUsdPrice = btcPrice * coloredData.ratio;
      
      // 4. Actualizar UI
      btcPriceElement.textContent = btcPrice.toLocaleString('en-US', {
        style: 'currency',
        currency: 'USD'
      });
      
      coloredRatioElement.textContent = coloredBtcPrice.toFixed(6);
      
      coloredPriceElement.textContent = coloredUsdPrice.toLocaleString('en-US', {
        style: 'currency', 
        currency: 'USD'
      });
      
      lastUpdatedElement.textContent = new Date().toLocaleTimeString();
      
      // 5. Actualizar cada 30 segundos
      setTimeout(updatePrices, 30000);
      
    } catch (error) {
      console.error("Error updating prices:", error);
      // Reintentar después de 10 segundos si hay error
      setTimeout(updatePrices, 10000);
    }
  }

  // Iniciar
  updatePrices();
});
      
      this.updatePriceData(mockData);
      
    } catch (error) {
      console.error('Error:', error);
      this.showErrorState();
    } finally {
      this.setLoadingState(false);
    }
  }
  
  updatePriceData(data) {
    this.btcPrice = data.btcPrice;
    this.lastUpdated = data.lastUpdated;
    
    this.updatePriceDisplay();
    this.saveToLocalStorage();
  }
  
  updatePriceDisplay() {
    const satoshis = Math.round(this.btcPrice * 100000000);
    
    this.elements.price.textContent = `${this.btcPrice.toFixed(6)} BTC`;
    this.elements.satoshi.textContent = `${satoshis.toLocaleString()} satoshis`;
    this.elements.lastUpdated.textContent = `Actualizado: ${this.lastUpdated.toLocaleTimeString()}`;
    
    this.animatePriceChange();
  }
  
  animatePriceChange() {
    this.elements.price.style.transition = 'all 0.3s';
    this.elements.price.style.transform = 'scale(1.1)';
    this.elements.price.style.color = '#ffd700';
    
    setTimeout(() => {
      this.elements.price.style.transform = 'scale(1)';
      this.elements.price.style.color = '#f7931a';
    }, 300);
  }
  
  setLoadingState(isLoading) {
    if (isLoading) {
      this.elements.price.textContent = 'Cargando...';
      this.refreshBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Actualizando';
      this.refreshBtn.disabled = true;
    } else {
      this.refreshBtn.innerHTML = '<i class="fas fa-sync-alt"></i> Actualizar';
      this.refreshBtn.disabled = false;
    }
  }
  
  showErrorState() {
    this.elements.price.textContent = 'Error';
    this.elements.satoshi.textContent = '---';
    this.elements.lastUpdated.textContent = 'Error al cargar datos';
  }
  
  saveToLocalStorage() {
    localStorage.setItem('lastBTCPrice', JSON.stringify({
      price: this.btcPrice,
      timestamp: this.lastUpdated.getTime()
    }));
  }
  
  loadFromLocalStorage() {
    const savedData = localStorage.getItem('lastBTCPrice');
    if (savedData) {
      const { price, timestamp } = JSON.parse(savedData);
      this.updatePriceData({
        btcPrice: price,
        lastUpdated: new Date(timestamp)
      });
    }
  }
  
  setupEventListeners() {
    this.refreshBtn.addEventListener('click', () => this.fetchPriceData());
    
    // Actualización automática cada 30 segundos
    setInterval(() => this.fetchPriceData(), 30000);
    
    // Cargar datos guardados al inicio
    this.loadFromLocalStorage();
  }
  
  checkTelegramIntegration() {
    if (window.Telegram && window.Telegram.WebApp) {
      this.setupTelegramFeatures();
    }
  }
  
  setupTelegramFeatures() {
    const tgWebApp = window.Telegram.WebApp;
    tgWebApp.expand();
    
    // Añadir botón especial de Telegram
    const tgBtn = document.createElement('a');
    tgBtn.href = 'https://t.me/coloredbitcoin21';
    tgBtn.className = 'btn telegram-btn';
    tgBtn.innerHTML = '<i class="fab fa-telegram"></i> Canal Oficial';
    document.querySelector('.info-card').appendChild(tgBtn);
    
    // Ajustar UI para Telegram
    document.body.classList.add('telegram-webapp');
  }
}

// Inicializar la aplicación
new ColoredBitcoinApp();</script>
